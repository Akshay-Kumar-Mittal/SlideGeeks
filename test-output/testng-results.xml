<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-17T17:19:23 IST" name="Default suite" finished-at="2022-04-17T17:19:31 IST" duration-ms="7553">
    <groups>
    </groups>
    <test started-at="2022-04-17T17:19:23 IST" name="Default test" finished-at="2022-04-17T17:19:31 IST" duration-ms="7553">
      <class name="scripts.ContactUsPageScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:16 IST" name="setup" finished-at="2022-04-17T17:19:23 IST" duration-ms="6808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="initializeObjects()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:23 IST" name="initializeObjects" finished-at="2022-04-17T17:19:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeObjects -->
        <test-method is-config="true" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:23 IST" name="getMethodName" finished-at="2022-04-17T17:19:23 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactUsPageScript.inputCaptchaCode() throws java.io.IOException,java.lang.InterruptedException,net.sourceforge.tess4j.TesseractException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method signature="inputCaptchaCode()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:23 IST" name="inputCaptchaCode" finished-at="2022-04-17T17:19:29 IST" duration-ms="6120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputCaptchaCode -->
        <test-method is-config="true" signature="setTestResult(org.testng.ITestResult)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="setTestResult" finished-at="2022-04-17T17:19:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputCaptchaCode status=SUCCESS method=ContactUsPageScript.inputCaptchaCode()[pri:0, instance:scripts.ContactUsPageScript@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestResult -->
        <test-method is-config="true" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="getMethodName" finished-at="2022-04-17T17:19:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactUsPageScript.inputComment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method signature="inputComment()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="inputComment" finished-at="2022-04-17T17:19:29 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputComment -->
        <test-method is-config="true" signature="setTestResult(org.testng.ITestResult)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="setTestResult" finished-at="2022-04-17T17:19:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputComment status=SUCCESS method=ContactUsPageScript.inputComment()[pri:0, instance:scripts.ContactUsPageScript@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestResult -->
        <test-method is-config="true" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="getMethodName" finished-at="2022-04-17T17:19:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactUsPageScript.inputEmailAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method signature="inputEmailAddress()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:29 IST" name="inputEmailAddress" finished-at="2022-04-17T17:19:30 IST" duration-ms="432" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:617)
at scripts.ContactUsPageScript.inputEmailAddress(ContactUsPageScript.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputEmailAddress -->
        <test-method is-config="true" signature="setTestResult(org.testng.ITestResult)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="setTestResult" finished-at="2022-04-17T17:19:30 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputEmailAddress status=FAILURE method=ContactUsPageScript.inputEmailAddress()[pri:0, instance:scripts.ContactUsPageScript@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestResult -->
        <test-method is-config="true" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="getMethodName" finished-at="2022-04-17T17:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactUsPageScript.inputName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method signature="inputName()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="inputName" finished-at="2022-04-17T17:19:30 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputName -->
        <test-method is-config="true" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="getMethodName" finished-at="2022-04-17T17:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scripts.ContactUsPageScript.inputPhoneNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method signature="inputPhoneNumber()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="inputPhoneNumber" finished-at="2022-04-17T17:19:31 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputPhoneNumber -->
        <test-method is-config="true" signature="setTestResult(org.testng.ITestResult)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:30 IST" name="setTestResult" finished-at="2022-04-17T17:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputName status=SUCCESS method=ContactUsPageScript.inputName()[pri:0, instance:scripts.ContactUsPageScript@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestResult -->
        <test-method is-config="true" signature="setTestResult(org.testng.ITestResult)[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:31 IST" name="setTestResult" finished-at="2022-04-17T17:19:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputPhoneNumber status=SUCCESS method=ContactUsPageScript.inputPhoneNumber()[pri:0, instance:scripts.ContactUsPageScript@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestResult -->
        <test-method is-config="true" signature="ClickonSubmitButton()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:31 IST" name="ClickonSubmitButton" finished-at="2022-04-17T17:19:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickonSubmitButton -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:scripts.ContactUsPageScript@576d5deb]" started-at="2022-04-17T17:19:31 IST" name="quitDriver" finished-at="2022-04-17T17:19:31 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
      </class> <!-- scripts.ContactUsPageScript -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
